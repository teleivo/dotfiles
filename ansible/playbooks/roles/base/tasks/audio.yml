---
# Audio and Voice Processing Packages
# Required for modern PipeWire audio setup with Bluetooth and voice transcription
- name: Install audio control and management tools
  ansible.builtin.apt:
    name:
      # Audio control interfaces and testing
      - pavucontrol          # GUI audio mixer for PipeWire/PulseAudio compatibility
      - pulseaudio-utils     # Command-line audio tools (pactl, parecord, etc.)
      - pipewire-tests       # PipeWire testing utilities (pw-play, pw-record, pw-top)
      - qpwgraph            # Visual audio routing interface for complex setups
      - playerctl           # MPRIS media player command-line controller

      # Bluetooth audio enhancements
      - blueman             # Modern Bluetooth GUI manager (better than GNOME's)
      - libopenaptx0        # aptX codec for higher quality Bluetooth audio
      - rfkill              # Radio frequency management (enable/disable Bluetooth)

      # Voice processing and development libraries
      - ffmpeg              # Media processing required by OpenAI Whisper
      - libasound2-dev      # ALSA development headers for audio applications
      - portaudio19-dev     # PortAudio development libraries for voice tools

      # Dictation support (nerd-dictation)
      - wtype               # Wayland text input simulator for dictation
    state: present
    update_cache: yes
  become: yes

- name: Create virtual environment for nerd-dictation
  ansible.builtin.shell:
    cmd: uv venv ~/.local/share/nerd-dictation-venv
    creates: ~/.local/share/nerd-dictation-venv/bin/python

- name: Install VOSK in virtual environment
  ansible.builtin.shell:
    cmd: uv pip install --python ~/.local/share/nerd-dictation-venv/bin/python vosk
  register: vosk_install_result
  changed_when: "'Successfully installed' in vosk_install_result.stdout"

- name: Clone nerd-dictation repository
  ansible.builtin.git:
    repo: https://github.com/ideasman42/nerd-dictation.git
    dest: "{{ ansible_env.HOME }}/.local/share/nerd-dictation"
    version: "{{ nerd_dictation_commit }}"
    update: yes

- name: Create nerd-dictation config directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/nerd-dictation"
    state: directory
    mode: '0755'

- name: Download VOSK models
  ansible.builtin.get_url:
    url: "https://alphacephei.com/vosk/models/{{ item.name }}.zip"
    dest: "{{ ansible_env.HOME }}/.config/nerd-dictation/{{ item.name }}.zip"
    mode: '0644'
    checksum: "sha1:{{ item.checksum }}"
  loop:
    - name: vosk-model-small-en-us-0.15
      description: "Lightweight model (40MB, 9.85% WER)"
      checksum: "4b5523d1db7688e31e44608cf96cdad92e4603e7"
      default: false
    - name: vosk-model-en-us-0.22-lgraph
      description: "Dynamic graph model (128MB, 7.82% WER) - supports vocabulary modification"
      checksum: "d03bb4c3a7f4ccb19157c8c7bc055c5083095cbb"
      default: true

- name: Extract VOSK models
  ansible.builtin.unarchive:
    src: "{{ ansible_env.HOME }}/.config/nerd-dictation/{{ item.name }}.zip"
    dest: "{{ ansible_env.HOME }}/.config/nerd-dictation/"
    remote_src: yes
    creates: "{{ ansible_env.HOME }}/.config/nerd-dictation/{{ item.name }}"
  loop:
    - name: vosk-model-small-en-us-0.15
      description: "Lightweight model (40MB, 9.85% WER)"
      default: false
    - name: vosk-model-en-us-0.22-lgraph
      description: "Dynamic graph model (128MB, 7.82% WER) - supports vocabulary modification"
      default: true