#!/bin/bash
# Automatic WebRTC connection script for Avantree C81
# Links raw microphone to WebRTC processing when both nodes are available

LOGFILE="/tmp/avantree-webrtc-connect.log"

log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S'): $*" | tee -a "$LOGFILE"
}

# Wait for both nodes to be available
wait_for_nodes() {
    local max_wait=30
    local count=0

    log "Waiting for WebRTC nodes to become available..."

    while [ $count -lt $max_wait ]; do
        # Check if both nodes exist
        if pw-cli ls Node | grep -q "avantree_echo_cancel_capture" && \
           pactl list sources short | grep -q "alsa_input.*Avantree.*mono-fallback"; then
            log "Both nodes found, proceeding with connection"
            return 0
        fi

        sleep 1
        count=$((count + 1))
    done

    log "Timeout waiting for nodes to appear"
    return 1
}

# Create the connection using pactl module-loopback for reliability
create_connection() {
    log "Creating WebRTC connection..."

    # Get the exact source name
    local raw_source
    raw_source=$(pactl list sources short | grep "alsa_input.*Avantree.*mono-fallback" | cut -f2)

    if [ -z "$raw_source" ]; then
        log "ERROR: Cannot find raw Avantree microphone source"
        return 1
    fi

    # Check if WebRTC capture sink exists
    if ! pactl list sinks short | grep -q "avantree_echo_cancel_capture"; then
        log "ERROR: WebRTC capture sink not found"
        return 1
    fi

    # Create a loopback connection from raw microphone to WebRTC processing
    local module_id
    module_id=$(pactl load-module module-loopback \
        source="$raw_source" \
        sink="avantree_echo_cancel_capture" \
        latency_msec=10 \
        2>/dev/null)

    if [ -n "$module_id" ]; then
        log "Successfully created WebRTC connection (module ID: $module_id)"
        echo "$module_id" > "/tmp/avantree-webrtc-module-id"
        return 0
    else
        log "ERROR: Failed to create WebRTC connection"
        return 1
    fi
}

# Main execution
main() {
    log "Starting Avantree WebRTC auto-connect service"

    if wait_for_nodes; then
        if create_connection; then
            log "WebRTC auto-connect completed successfully"
            exit 0
        else
            log "Failed to create WebRTC connection"
            exit 1
        fi
    else
        log "Failed to find required nodes within timeout"
        exit 1
    fi
}

main "$@"