# ansible

* create reusable task or a module for the git clone -> run something on a new release task
* automate install of hadolint
* automate install of https://github.com/JohnnyMorganz/StyLua/releases
* automate setup of dhis2.conf / also maybe move the DHIS2_HOME somewhere else to prevent it filling up my home ;)
* automatically update runtime paths of JDKs in lua config and bin/java-lsp so I do not have to when
a JDK is updated
* automate golang setup
* install tmux plugins?
* :GoInstallBinaries does not seem to be run when first installing vim plugins although I have the
Plug do clause
* download latest restic via the latest tag release info JSON as I do for neovim/bat/fd?

# tmux

* experiment with storing/reattaching to the last session or multiple ones I
frequently work with

# nvim

* can I implement cycling through the quickfixlist?
* test quickfixlist mappings
* remove trailing whitespace via lua function registered in an autocommand?
https://github.com/mjlbach/defaults.nvim/wiki/Additional-keybinds-and-utility-functions
* show diagnostics stats in statusline :) https://github.com/mfussenegger/dotfiles/blob/0a188517e45b8f1447ef765cc95eaeeae25fc7e3/vim/.config/nvim/lua/me/init.lua#L21-L27

### lint

* I can't navigate to shellcheck diagnostics
* shellcheck ignore like `# shellcheck disable=SC2046` do not remove the linting error shown

## Style

* make a PR in vim-dogrun for diagnostic colors

## Telescope

* quickly reload the module I just changed after opening it up using the telescope dotfiles function
* live_grep does not seem to find things in my lua files :thinking:
  in the dotfiles repo

## nvim-config

* what is the cleanest, most understandable way and maybe vim/nvim best
practices on how to configure language specifics. for example I would like to
configure go things in lua but some configs might be better placed into
after/ftplugin/go.vim ? like autocommands. but if these configs refer to
functions defined in lua its annoying having to jump back and forth between
these 2 files

## LSP

* for JSON doesnt fails to start

## Treesitter

* saving the playground query does not work. I get error buftype not set

## luasnip

* exercise tune snippet navigation/selection/expansion
weird behavior: when starting a snippet, every template var I land on
I first am in vim selection mode. Once I type I am in insert mode.
I cannot simply accept the default template var for example the
i in the for i := 0, .. loop and jump to the next var with tab.
I can only jump using tab when in insert mode. However, I can also
not jump in insert mode when the node in question triggers cmp completion.
I then have to add a space to get rid of cmp dropdown and then I can jump
using tab. but that jumbles up the code. there is probably another
way to stop cmp. but either way that all feels very awkward.

* try adding my own snippets
https://github.com/L3MON4D3/LuaSnip/blob/a4c119c8508bf1351bd5150b601eb77826776a2b/doc/luasnip.txt#L376

* trying https://github.com/L3MON4D3/LuaSnip/wiki/Nice-Configs#hint-node-type-with-virtual-text
 if I do not fully finish completing the snippet the virt_text remains even
 after deleting the snippet
 is that config helping me in any way? find a snippet I use with a choice
 node. how do I cycle between choice nodes?
 how to delete the added virtual text if completion fails?

## Java/Dhis2

* only format java code using DHIS2 formatter in ~/code/dhis2 repositories
* how to execute all tests or single test
* fix build errors reported in nvim lsp.log
* fix 
`language server jdt.ls triggers a register Capability handler despite dynamic Registration set to false. Report upstream, this warning is harmles`
* seems like star imports are used only for static imports like
`import static org.hamcrest.CoreMatchers.*`
how can that be configured in the organizeImports?

## Go

* validation of golangci-lint yaml doesnt work. check LSP config
* remove vim-go plugin? what am I using it for now that the LSP is working well
