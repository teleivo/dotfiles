set $mod Mod4

# Dogrun color palette
set $purple #b871b8
set $blue #363e7f
set $dark_blue #222433
set $red #dc6f79
set $light_gray #9ea3c0
set $gray #8085a6

# Hide window titles by default
default_border pixel 2
default_floating_border pixel 2

# Hide borders when only one window is visible
hide_edge_borders smart_no_gaps

# Font for window titles
font pango:monospace 18

# Window border colors
# Format: client.class border background text indicator child_border
client.focused          $purple $dark_blue $light_gray $purple $purple
client.focused_inactive $blue $dark_blue $light_gray $blue $blue
client.unfocused        $dark_blue $dark_blue $gray $dark_blue $dark_blue
client.urgent           $red $dark_blue $light_gray $red $red

# Wayland scaling
output * scale 2 scale_filter linear

output * bg ~/Pictures/wallpapers/forest.jpg fill

# Keyboard configuration
input "type:keyboard" {
    xkb_options caps:escape
}

# Touchpad configuration
input "type:touchpad" {
    tap enabled
    natural_scroll enabled
    click_method clickfinger
}

# Assign applications to workspaces (handles auto-launched apps)
# Assign 1Password main app to workspace 9, but exclude Quick Access and unlock dialogs
assign [class="1Password" instance="1password" title="^(?!Quick Access — 1Password$|1Password$).*"] workspace number 9

# XDG Desktop Portal environment variables
exec systemctl --user import-environment XDG_CURRENT_DESKTOP
exec systemctl --user import-environment XDG_SESSION_DESKTOP

# Manual screen lock keybinding
bindsym $mod+Ctrl+l exec swaylock --daemonize

# swayidle handles idle management and screen locking (disabled)
# After 50 minutes idle: lock screen with swaylock
# After 100 minutes idle: turn off displays (DPMS), resume turns them back on
# Before system sleep: lock screen
exec swayidle -w \
         timeout 3000 'swaylock -f --color 222433 --inside-color b871b8 --ring-color 9ea3c0 --line-color 00000000 --key-hl-color dc6f79 --text-color 9ea3c0' \
         timeout 6000 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f --color 222433 --inside-color b871b8 --ring-color 9ea3c0 --line-color 00000000 --key-hl-color dc6f79 --text-color 9ea3c0'

# Set desktop environment early for portals
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP XDG_SESSION_DESKTOP
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec dex --autostart --environment sway --exclude nm-applet
# notification daemon
exec dunst
exec "swaymsg 'workspace number 1; exec ghostty'"
exec "swaymsg 'workspace number 2; exec google-chrome'"
exec 1password

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag enable

# start a terminal
bindsym $mod+Return exec ghostty

# start fuzzel (application launcher)
bindsym $mod+d exec fuzzel

# take screenshot (using grim and slurp for Wayland)
# full desktop screenshot
bindsym $mod+p exec grim ~/Pictures/Screenshots/$(date +%Y-%m-%d-%H%M%S).png
# selected area screenshot
bindsym $mod+Shift+p exec grim -g "$(slurp)" ~/Pictures/Screenshots/$(date +%Y-%m-%d-%H%M%S).png
# focused window screenshot
bindsym $mod+Ctrl+p exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused? == true) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" ~/Pictures/Screenshots/$(date +%Y-%m-%d-%H%M%S).png

bindsym $mod+o exec 1password --quick-access
bindsym $mod+Shift+o exec 1password
bindsym $mod+Ctrl+o exec 1password --lock

# Dictation toggle (press to start/stop speech-to-text input)
bindsym $mod+m exec ~/code/dotfiles/bin/bin/dictation-toggle.sh

# brightness control
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-

# audio control
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# window switching
bindsym $mod+Tab focus right
bindsym $mod+Shift+Tab focus left

# kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split vertically (new window to the right, like ctrl+s>ctrl+v in ghostty)
bindsym $mod+ctrl+v split h

# split horizontally (new window below, like ctrl+s>ctrl+h in ghostty)
bindsym $mod+ctrl+h split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c exec "pkill swayidle && swaymsg reload && swaynag -t info \
    -m 'Configuration reloaded' --button 'OK' 'pkill swaynag'"
# restart sway inplace (preserves your layout/session, can be used to upgrade sway)
bindsym $mod+Shift+r restart
# exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

bar {
    id waybar
    status_command waybar
    # Hide sway's default bar since waybar provides the status bar
    mode invisible
    position top
}
bindsym $mod+b exec pkill -SIGUSR1 waybar
